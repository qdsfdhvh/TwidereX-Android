name: Desktop CI

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

concurrency:
  group: desktop-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Gradle
        run: ./gradlew :desktop:packageDeb

      - name: Upload build binaries
        uses: actions/upload-artifact@v2
        with:
          name: build-binaries-ubuntu
          path: '**/build/compose/binaries'

      - name: Check if is prelease
        if: startsWith(github.ref, 'refs/tags/')
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+\-(dev|beta)[0-9]+$ ]]; then
              echo ::set-output name=prelease::true
          fi

      - name: Create Prerelease
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease == 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.deb); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name" -p
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease != 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.deb); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Gradle
        run: ./gradlew :desktop:packageMsi

      - name: Upload build binaries
        uses: actions/upload-artifact@v2
        with:
          name: build-binaries-windows
          path: '**/build/compose/binaries'

      - name: Check if is prelease
        if: startsWith(github.ref, 'refs/tags/')
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+\-(dev|beta)[0-9]+$ ]]; then
              echo ::set-output name=prelease::true
          fi

      - name: Create Prerelease
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease == 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.msi); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name" -p
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease != 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.msi); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Gradle
        run: ./gradlew :desktop:packageDmg

      - name: Upload build binaries
        uses: actions/upload-artifact@v2
        with:
          name: build-binaries-macos
          path: '**/build/compose/binaries'

      - name: Check if is prelease
        if: startsWith(github.ref, 'refs/tags/')
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+\-(dev|beta)[0-9]+$ ]]; then
              echo ::set-output name=prelease::true
          fi

      - name: Create Prerelease
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease == 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.Dmg); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name" -p
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag.outputs.prelease != 'true'
        run: |
          set -x
          assets=()
          for asset in $(find -name *.Dmg); do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

